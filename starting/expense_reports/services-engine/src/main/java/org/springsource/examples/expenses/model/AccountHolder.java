package org.springsource.examples.expenses.model;
// Generated Aug 5, 2011 12:43:19 AM by Hibernate Tools 3.2.0.CR1


import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

/**
 * AccountHolder generated by hbm2java
 */
@Entity
@Table(name = "account_holder"
		      , schema = "public")
public class AccountHolder implements java.io.Serializable {


	private long accountHolderId;
	private AccountHolder authorizingAccountHolder;
	private String firstName;
	private String lastName;
	private String email;
	private Set<CreditCard> creditCards = new HashSet<CreditCard>(0);
	private Set<ChargeBatch> chargeBatchs = new HashSet<ChargeBatch>(0);
	private Set<AccountHolder> accountHolders = new HashSet<AccountHolder>(0);

	public AccountHolder() {
	}


	public AccountHolder(long accountHolderId, AccountHolder authorizingAccountHolder, String firstName, String lastName, String email) {
		this.accountHolderId = accountHolderId;
		this.authorizingAccountHolder = authorizingAccountHolder;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
	}

	public AccountHolder(long accountHolderId, AccountHolder authorizingAccountHolder, String firstName, String lastName, String email, Set<CreditCard> creditCards, Set<ChargeBatch> chargeBatchs, Set<AccountHolder> accountHolders) {
		this.accountHolderId = accountHolderId;
		this.authorizingAccountHolder = authorizingAccountHolder;
		this.firstName = firstName;
		this.lastName = lastName;
		this.email = email;
		this.creditCards = creditCards;
		this.chargeBatchs = chargeBatchs;
		this.accountHolders = accountHolders;
	}

	@Id

	@Column(name = "account_holder_id", unique = true, nullable = false)
	public long getAccountHolderId() {
		return this.accountHolderId;
	}

	public void setAccountHolderId(long accountHolderId) {
		this.accountHolderId = accountHolderId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "authorizing_account_holder_id", nullable = false)
	public AccountHolder getAuthorizingAccountHolder() {
		return this.authorizingAccountHolder;
	}

	public void setAuthorizingAccountHolder(AccountHolder authorizingAccountHolder) {
		this.authorizingAccountHolder = authorizingAccountHolder;
	}

	@Column(name = "first_name", nullable = false)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", nullable = false)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "accountHolder")
	public Set<CreditCard> getCreditCards() {
		return this.creditCards;
	}

	public void setCreditCards(Set<CreditCard> creditCards) {
		this.creditCards = creditCards;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "accountHolder")
	public Set<ChargeBatch> getChargeBatchs() {
		return this.chargeBatchs;
	}

	public void setChargeBatchs(Set<ChargeBatch> chargeBatchs) {
		this.chargeBatchs = chargeBatchs;
	}

	@OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "authorizingAccountHolder")
	public Set<AccountHolder> getAccountHolders() {
		return this.accountHolders;
	}

	public void setAccountHolders(Set<AccountHolder> accountHolders) {
		this.accountHolders = accountHolders;
	}


}


